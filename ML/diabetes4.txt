import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score




# Load the diabetes dataset
df = pd.read_csv('diabetes.csv')

# Display the first few rows of the dataset
print(df.head())




# Define features (X) and target (y)
X = df.iloc[:, :-1].values  # All columns except the last one
y = df.iloc[:, -1].values   # The last column as the target




X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)




scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)




# Instantiate the KNN model with k=7 (or any other value for neighbors)
knn = KNeighborsClassifier(n_neighbors=7)

# Train the model
knn.fit(X_train, y_train)

# Predict the results on the test set
y_pred = knn.predict(X_test)




cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:\n", cm)




# Accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy: ", accuracy)

# Error rate (1 - Accuracy)
error_rate = 1 - accuracy
print("Error Rate: ", error_rate)

# Precision
precision = precision_score(y_test, y_pred)
print("Precision: ", precision)

# Recall
recall = recall_score(y_test, y_pred)
print("Recall: ", recall)



